import sys

sys.path.insert(0, '../')
from vaishakhi.MLCG import *

print("--------Multiplicative linear congruential generator--------")
print("10 random numbers generated by m = 1021 and a = 65 are", MLCG(m = 1021, a = 65, c = 0,initial = -1, final = 1, N=10)) 
print("10 random numbers generated by m = 16381 and a = 572 are",MLCG(m = 16381, a = 572, c = 0,initial = -1, final = 1, N=10))


initial = 0
final = 1
n = 10000
circle_points = 0
i =0

while i<n:
    
    x = rand_uniform(16381,572,0,-1,1)
    y = rand_uniform(16381,572,0,-1,1)    
    if(x**2 + y**2 <= 1):
        circle_points+=1
    i+=1
    
pi = 4*circle_points/float(n)
print('\nThe estimated value calculated of pi by throwing points is', pi)   


# array of zeros of length N
ar = MLCG(m = 16381, a = 572, c = 0,initial = 0, final = 1,N = n)
integral = 0.0
  
# function to calculate the sin of a particular
# value of x
def f(x):
    return np.sqrt(1-x**2)
  
for i in ar:
    integral += f(i)
ans = (final-initial)/float(n)*integral
  
# prints the solution
print ('The estimated value calculated of pi by monte carlo integration is {}.'.format(ans*4))


